{
	"info": {
		"_postman_id": "be0aa410-868a-48b5-90ac-12f9737d9d76",
		"name": "Postman Test Collection guru99 test",
		"description": "Test collection for Postman - guru99 exercise",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Access Homepage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check if user with id1 is Leanne Graham\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].name).to.eql(\"Leanne Graham\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"name": "Access Homepage",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Date",
							"value": "Tue, 27 Jul 2021 13:41:00 GMT"
						},
						{
							"key": "Content-Type",
							"value": "text/html; charset=UTF-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "x-ratelimit-limit",
							"value": "1000"
						},
						{
							"key": "x-ratelimit-remaining",
							"value": "999"
						},
						{
							"key": "x-ratelimit-reset",
							"value": "1627380001"
						},
						{
							"key": "vary",
							"value": "Origin, Accept-Encoding"
						},
						{
							"key": "access-control-allow-credentials",
							"value": "true"
						},
						{
							"key": "cache-control",
							"value": "public, max-age=43200"
						},
						{
							"key": "last-modified",
							"value": "Tue, 27 Jul 2021 09:04:54 GMT"
						},
						{
							"key": "via",
							"value": "1.1 vegur"
						},
						{
							"key": "CF-Cache-Status",
							"value": "HIT"
						},
						{
							"key": "Age",
							"value": "13310"
						},
						{
							"key": "Expect-CT",
							"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
						},
						{
							"key": "Report-To",
							"value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=%2FLk2nb7QR7allailegS2cOBtlfUFPZZeG%2FfwpzxBeXkh%2FSSyD2yLyg7SQpPNUsUuTKqPxSoNBKkBfigORinrI4PyKvuJLzccjWOZvyYwPbm7NBHKTlVriefglaK6TI9zWPVrp2Ifo8I5CWPzyriy\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "NEL",
							"value": "{\"report_to\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "675648672eb00f2e-DFW"
						},
						{
							"key": "Content-Encoding",
							"value": "br"
						},
						{
							"key": "alt-svc",
							"value": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400, h3=\":443\"; ma=86400"
						}
					],
					"cookie": [],
					"body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n        <link rel=\"stylesheet\" href=\"/style.css\" />\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.21.0/themes/prism-tomorrow.min.css\" />\n        <title>JSONPlaceholder - Free Fake REST API</title>\n        <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-E3C3GCQVBN\"></script>\n        <script>\n      window.dataLayer = window.dataLayer || []\n      function gtag() {\n        dataLayer.push(arguments)\n      }\n      gtag('js', new Date())\n\n      gtag('config', 'G-E3C3GCQVBN')\n    </script>\n    </head>\n    <body class=\"px-2\">\n        <div class=\"sticky top-0 py-4 -mx-2 text-center bg-indigo-200 font-bold\">\n            <a href=\"https://github.com/typicode/xv\" class=\"text-indigo-800\">check xv, a new minimalist test runner for Node projects</a\n      >\n        </div>\n        <header class=\"\n        container\n        mx-auto\n        max-w-4xl\n        flex flex-col\n        md:flex-row\n        justify-between\n        py-one\n        mb-three\n      \">\n            <h1>\n                <a href=\"/\" class=\"font-bold no-underline\">JSONPlaceholder</a>\n            </h1>\n            <nav>\n                <ul class=\"flex\">\n                    <li>\n                        <a href=\"/guide\" class=\"mr-4 no-underline\">Guide</a>\n                    </li>\n                    <li>\n                        <a href=\"https://github.com/sponsors/typicode\" class=\"mr-4 no-underline\">Sponsor this project</a\n            >\n                    </li>\n                    <li>\n                        <a href=\"https://blog.typicode.com\" class=\"mr-4 no-underline\">Blog</a\n            >\n                    </li>\n                    <li>\n                        <a href=\"https://my-json-server.typicode.com\" class=\"no-underline\">My JSON Server</a\n            >\n                    </li>\n                </ul>\n            </nav>\n        </header>\n        <div>\n            <section id=\"hero\" class=\"-mt-three py-36 mb-six -mx-2\">\n                <div class=\"container mx-auto max-w-4xl\">\n                    <span class=\"text-6xl bold\">{JSON} Placeholder</span>\n                    <h1 class=\"mt-two text-lg\">\nFree fake API for testing and prototyping.\n</h1>\n                    <p class=\"mb-one text-lg\">\nPowered by\n\n                        <a href=\"https://github.com/typicode/json-server\">JSON Server</a>\n+\n                        <a href=\"https://github.com/typicode/lowdb\">LowDB</a>\n                    </p>\n                    <p>As of Dec 2020, \n                        <b>serving ~1.8 billion requests each month</b>.\n                    </p>\n                </div>\n            </section>\n            <section class=\"container mx-auto max-w-4xl mb-six\">\n                <h2 class=\"text-2xl mb-one\">Sponsors</h2>\n                <p class=\"mb-two\">\nJSONPlaceholder is supported by the following companies and\n\n                    <a href=\"https://github.com/sponsors/typicode\">Sponsors</a> on GitHub, check\nthem out 💖\n                </p>\n                <p>\n                    <a href=\"https://tryretool.com/?utm_source=sponsor&utm_campaign=typicode\" target=\"_blank\">\n                        <img src=\"https://i.imgur.com/IBItATn.png\" class=\"h-three mb-two\" />\n                    </a>\n                </p>\n                <p>\n                    <a href=\"https://mockend.com\" target=\"_blank\">\n                        <img src=\"https://mockend.com/static/banner.svg\" class=\"h-three mb-two\" />\n                    </a>\n                </p>\n                <hr class=\"mt-two\">\n                <p class=\"my-one\">\n                    <strong>Retool Utilities</strong> — Need to generate an API from a CSV? Import a CSV into Postgres? We’ve updated our collection of 20+ developer utilities-ranging from generating a CRUD app to creating mock data—so you have a go-to resource when building apps.\n                    <a href=\"https://retool.com/utilities/\">Check it out now</a>\n                </p>\n                <hr>\n                <p class=\"my-two\">\n                    <a href=\"https://github.com/sponsors/typicode\">Your company logo here</a>\n                </p>\n            </section>\n            <section class=\"container mx-auto max-w-4xl mb-four\">\n                <h2 class=\"text-2xl mb-one\">Try it</h2>\n                <p>Run this code here, in a console or from any site:</p>\n                <pre>\n                    <code id=\"example\" class=\"language-javascript\">fetch('https://jsonplaceholder.typicode.com/todos/1')\n  .then(response => response.json())\n  .then(json => console.log(json))</code>\n                </pre>\n                <button id=\"run-button\" class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-quarter my-quarter px-4 rounded\">\nRun script\n</button>\n                <pre>\n                    <code id=\"result\" class=\"language-javascript\">{}</code>\n                </pre>\n                <p id=\"run-message\" class=\"invisible\">\nCongrats you've made your first call to JSONPlaceholder! 😃 🎉\n</p>\n                <div id=\"crbn\"></div>\n            </section>\n            <main class=\"container mx-auto max-w-4xl\">\n                <h2>When to use</h2>\n                <p>JSONPlaceholder is a free online REST API that you can use \n                    <strong>whenever you need some fake data</strong>. It can be in a README on GitHub, for a demo on CodeSandbox, in code examples on Stack Overflow, ...or simply to test things locally.\n                </p>\n                <h2>Resources</h2>\n                <p>JSONPlaceholder comes with a set of 6 common resources:</p>\n                <table>\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <a href=\"/posts\">/posts</a>\n                            </td>\n                            <td>100 posts</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <a href=\"/comments\">/comments</a>\n                            </td>\n                            <td>500 comments</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <a href=\"/albums\">/albums</a>\n                            </td>\n                            <td>100 albums</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <a href=\"/photos\">/photos</a>\n                            </td>\n                            <td>5000 photos</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <a href=\"/todos\">/todos</a>\n                            </td>\n                            <td>200 todos</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <a href=\"/users\">/users</a>\n                            </td>\n                            <td>10 users</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <p>\n                    <strong>Note</strong>: resources have relations. For example: posts have many comments, albums have many photos, ... see\n                    <a href=\"/guide\">guide</a> for the full list.\n                </p>\n                <h2>Routes</h2>\n                <p>All HTTP methods are supported. You can use http or https for your requests.</p>\n                <table>\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>GET</td>\n                            <td>\n                                <a href=\"/posts\">/posts</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>GET</td>\n                            <td>\n                                <a href=\"/posts/1\">/posts/1</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>GET</td>\n                            <td>\n                                <a href=\"/posts/1/comments\">/posts/1/comments</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>GET</td>\n                            <td>\n                                <a href=\"/comments?postId=1\">/comments?postId=1</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>POST</td>\n                            <td>/posts</td>\n                        </tr>\n                        <tr>\n                            <td>PUT</td>\n                            <td>/posts/1</td>\n                        </tr>\n                        <tr>\n                            <td>PATCH</td>\n                            <td>/posts/1</td>\n                        </tr>\n                        <tr>\n                            <td>DELETE</td>\n                            <td>/posts/1</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <p>\n                    <strong>Note</strong>: see\n                    <a href=\"/guide\">guide</a> for usage examples.\n                </p>\n                <h2>Use your own data</h2>\n                <p>With our sponsor \n                    <a href=\"https://mockend.com\">Mockend</a> and a simple GitHub repo, you can have your own fake online REST server in seconds.\n                </p>\n            </main>\n            <script>\n  // Use http or https based on location.protocol\n  var example = document.getElementById('example');\n  example.textContent = example.textContent.replace('http:', location.protocol);\n\n  // Highlight result element\n  var result = document.getElementById('result');\n\n  // Run example\n  var runButton = document.getElementById('run-button');\n  runButton.onclick = function () {\n    var root = location.protocol + '//jsonplaceholder.typicode.com';\n    var runMessage = document.getElementById('run-message');\n\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then((response) => response.json())\n      .then((json) => {\n        var str = JSON.stringify(json, null, '\t');\n\n        // Format result\n        result.innerHTML = Prism.highlight(\n          str,\n          Prism.languages.javascript,\n          'javascript',\n        );\n\n        runMessage.className = '';\n      });\n  };\n</script>\n        </div>\n        <footer class=\"container mx-auto max-w-4xl mt-four\">\n            <div class=\"mb-one\">\n                <a href=\"https://github.com/users/typicode/sponsorship\">\n                    <strong>You can sponsor this project (and others) on GitHub</strong>\n                </a>\n            </div>\n            <div class=\"mb-one\">\nCoded and maintained with ❤️ by\n\n                <a href=\"https://github.com/typicode\">typicode</a> © 2021\n            </div>\n        </footer>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.21.0/prism.min.js\"></script>\n        <script src=\"/script.js\"></script>\n        <script defer src=\"https://static.cloudflareinsights.com/beacon.min.js\" data-cf-beacon='{\"rayId\":\"675648672eb00f2e\",\"version\":\"2021.7.0\",\"r\":1,\"token\":\"2f059cbf58a24e59854ee0884c97b166\",\"si\":10}'></script>\n    </body>\n</html>"
				}
			]
		},
		{
			"name": "POST a message Copy",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\" : \"My first post\",\r\n    \"body\" : \"This is a NEW Post\",\r\n    \"user-id\" : 101\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/posts",
					"host": [
						"{{url}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": [
				{
					"name": "New Request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\" : \"My first post\",\r\n    \"body\" : \"This is a NEW Post\",\r\n    \"user-id\" : 101\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/posts",
							"host": [
								"{{url}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Tue, 27 Jul 2021 13:50:12 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "93"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "x-ratelimit-limit",
							"value": "1000"
						},
						{
							"key": "x-ratelimit-remaining",
							"value": "999"
						},
						{
							"key": "x-ratelimit-reset",
							"value": "1627393861"
						},
						{
							"key": "vary",
							"value": "Origin, X-HTTP-Method-Override, Accept-Encoding"
						},
						{
							"key": "access-control-allow-credentials",
							"value": "true"
						},
						{
							"key": "cache-control",
							"value": "no-cache"
						},
						{
							"key": "pragma",
							"value": "no-cache"
						},
						{
							"key": "expires",
							"value": "-1"
						},
						{
							"key": "access-control-expose-headers",
							"value": "Location"
						},
						{
							"key": "location",
							"value": "http://jsonplaceholder.typicode.com/posts/101"
						},
						{
							"key": "x-content-type-options",
							"value": "nosniff"
						},
						{
							"key": "etag",
							"value": "W/\"5d-IGhftPsGvChmX1TvBIUII58n64c\""
						},
						{
							"key": "via",
							"value": "1.1 vegur"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Expect-CT",
							"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
						},
						{
							"key": "Report-To",
							"value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=7b1G7An0CkW7UO5C73RwrCm2evsHRJt03sfjKykNmNIS3cMDiU7iu4TS5p2amfc8bwb8uv4%2FQbW2DLJS9BWtKZ4StMN6JtUeDkPUa3IfIdxAFh2UA4WSJOLq5VO8VyE3YkFWaVFAd6led3Hvh4b5\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "NEL",
							"value": "{\"report_to\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "675655e0cd340f2e-DFW"
						},
						{
							"key": "alt-svc",
							"value": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400, h3=\":443\"; ma=86400"
						}
					],
					"cookie": [],
					"body": "{\n    \"title\": \"My first post\",\n    \"body\": \"This is a NEW Post\",\n    \"user-id\": 101,\n    \"id\": 101\n}"
				}
			]
		}
	]
}